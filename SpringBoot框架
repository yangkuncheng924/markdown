# 					**SpringBoot**

# 一、Spring入门

## 1. 第一个SpringBoot的Hello world

### 	1.1 创建一个maven工程



### 	1.2 导入依赖的springboot相关依赖

~~~xml
<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot -->
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot</artifactId>
	<version>2.3.1.RELEASE</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-web</artifactId>
	<version>2.3.1.RELEASE</version>
</dependency>

<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.3.1.RELEASE</version>
</dependency>
~~~

###  1.3 编写一个主程序

~~~java
/**
 * @SpringBootApplication   来标注一个主程序类，说明这是一个Spring boot应用
 */
@SpringBootApplication
public class Helloworld {
    public static void main(String[] args){
      // Spring应用启动run
        SpringApplication.run(Helloworld.class,args);
    }
}
~~~

### 1.4 编写相关的Conteroller、Service

~~~java
@Controller
public class HelloController {
    @ResponseBody
    @RequestMapping("/hello")
    public String hello(){
        return "hello world!";
    }
}
~~~

### 1.5 运行

~~~java
/*
运行 该主类 访问localhosh：8080/hello 
*/
@SpringBootApplication
public class Helloworld {
    public static void main(String[] args){
      // Spring应用启动run
        SpringApplication.run(Helloworld.class,args);
    }
}
~~~

### 1.6自动打包插件

~~~xml
<!--可将写好代码 一键打包 需导入该插件 -->
<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-maven-plugin -->
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-maven-plugin</artifactId>
    <version>2.3.1.RELEASE</version>
</dependency>
~~~

- 选择maven 选择package即可打包

![image-20200628174500925](C:\Users\15371\AppData\Roaming\Typora\typora-user-images\image-20200628174500925.png)

- 生成文件即放在target

  ![image-20200628174614837](C:\Users\15371\AppData\Roaming\Typora\typora-user-images\image-20200628174614837.png)

## 2.使用Spring Boot快速创建Spring Boot项目

IDEA都支持使用Spring的项目创建向导快速创建一个Spring Boot项目

选择new -> project ->Spring Initializr

- resources文件夹目录结构

  - static:保存所有的静态资源；js css images；

    

  - templates：保存所有的模板页面；(Sping Boot默认jar包使用嵌入式的Tomcat，默认不知道JSP页面)；可以使用模板引擎（freemarker、thymeleaf）；

    

  - application.properties:Spring Boot应用的配置文件;可以修改一些默认配置





# 二、配置文件

## 1.SpringBoot使用一个全局的配置文件 配置文件名是固定的

- application.properties
- application.yml



配置文件的作用 ：修改SpringBoot自动配置默认值；SpringBoot在底层都给我们自动配置好



YAML(YAML Ain't Markup Language)

​	YAML A Markup Language : 是一个标记语言

​	YAML isn't Markup Language : 不是一个标记语言；

标记语言 :

以前的配置文件大多都使用的是 xxx.xml文件

YAML : 以数据为中心 ，比json xml等更适合做配置文件

